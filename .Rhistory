set.seed(1)
rpois(5, 2)
?rep
rep(0:1, each = 5)
set.seed(10)
x<-rep(0:1, each = 5)
e<-rnorm(10,0,20)
y<-0.5+2*x+e
plot(x,y)
?grep
library(swirl)
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
?data.table
??data.table
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
install_from_swirl("Exploratory Data Analysis")
library(XML)
library(swirl)
swrl()
swirl()
mydf<-read.csv(path2csv, stringsAsFactors = F)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500 & r_os=="linux-gnu")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version=!is.na(r_version))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size-1000)
mutate(cran3, correct_size=size+1000)
summarise(cran, avg_bytes=mean(size))
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf)"
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
view(top-counts)
view(top_counts)
View(top_counts)
top_counts <- arrange(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_counts_sorted <- arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit
submit()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
?read.table
?read.table
library(dplyr)
days <- group_by(data, dates)
steps_day <- summarise(days, steps = sum(steps))
ctivity.csv <- unzip("activity.zip")
activity <- read.csv(activity.csv, header = T)
dates <- as.Date(activity[,2], "%Y-%m-%d", tz = UTC)
df <- data.frame(dates, activity[,1], activity[,3])
colnames(df) <- c("dates", "steps", "interval")
rmNA <- is.na(df[,2])
data <- df[rmNA==FALSE,]
activity.csv <- unzip("activity.zip")
activity <- read.csv(activity.csv, header = T)
dates <- as.Date(activity[,2], "%Y-%m-%d", tz = UTC)
df <- data.frame(dates, activity[,1], activity[,3])
colnames(df) <- c("dates", "steps", "interval")
rmNA <- is.na(df[,2])
data <- df[rmNA==FALSE,]
?average
??average
setwd("F:/ReproducibleR/Assignment1")
library(knitr)
knit2html("PA1_template.Rmd")
